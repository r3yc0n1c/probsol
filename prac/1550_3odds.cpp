/*
OJ: https://leetcode.com/problems/three-consecutive-odds/description/
Time:
Space:
*/
#include <iostream>
#include <algorithm>
#include <vector>
#include <list>
#include <deque>
#include <stack>
#include <queue>
#include <set>
#include <unordered_set>
#include <map>
using namespace std;

class Solution
{
public:
    bool threeConsecutiveOdds(vector<int> &arr)
    {
        int range = arr.size() - 2;

        if (range > 0)
        {
            for (int i = 0; i < range; i++)
            {
                if (arr[i] & arr[i + 1] & arr[i + 2] & 1)
                    return true;
            }
        }
        return false;
    }
};

int main()
{
    vector<int> v = {862,718,80,168,340,568,330,310,146,958,290,724,460,124,500,960,842,456,768,708,792,928,164,848,230,590,302,190,56,704,242,614,678,954,262,118,174,536,952,638,638,688,818,556,318,398,318,936,886,102,644,400,452,98,544,670,540,172,314,930,188,262,384,798,694,140,742,668,946,518,352,622,92,48,304,434,290,894,942,366,448,888,570,370,728,962,244,726,174,390,920,776,262,868,604,156,250,152,574,584,504,728,146,286,110,668,804,152,150,346,576,840,788,22,558,190,2,900,166,942,296,374,694,548,72,658,136,472,306,522,564,576,190,410,586,176,854,428,4,254,524,802,322,470,994,838,716,174,930,566,922,736,450,618,224,698,152,408,534,734,776,630,400,60,746,12,598,324,700,224,950,986,156,770,674,386,644,394,768,96,488,394,794,284,92,282,142,230,170,984,860,318,232,682,446,258,374,376,282,744,768,448,470,368,32,250,270,252,846,824,798,436,762,470,60,988,788,136,546,368,988,490,790,354,776,522,278,798,852,632,972,824,770,136,488,950,804,288,650,582,44,380,698,370,766,860,910,862,520,390,446,244,500,458,354,268,18,322,878,592,726,338,910,272,402,698,480,194,62,62,580,142,424,298,760,82,148,408,830,328,402,102,354,510,336,264,520,622,766,160,860,278,128,932,52,32,354,654,854,854,890,868,142,38,244,970,508,774,152,120,610,810,452,128,404,632,678,90,24,366,602,362,542,630,330,310,964,864,262,420,664,760,264,386,38,4,258,766,998,990,40,384,48,546,264,910,358,778,26,254,576,342,548,370,958,74,900,988,552,692,500,6,496,92,730,540,672,300,444,126,628,292,220,246,28,922,156,534,406,970,126,942,106,776,950,102,970,304,224,868,540,182,110,432,362,766,638,846,974,514,38,74,288,854,580,324,130,986,740,620,918,818,62,226,550,292,22,548,220,554,352,192,390,980,168,706,722,720,476,178,332,686,264,808,884,194,632,734,734,702,118,558,586,862,938,552,980,880,708,262,294,682,718,282,434,420,354,280,758,220,784,608,916,670,304,196,994,166,148,948,808,778,362,862,466,396,452,102,900,608,864,62,198,354,40,968,740,80,444,142,102,558,86,314,52,98,28,946,694,610,864,136,628,364,578,78,452,688,124,280,602,184,82,726,228,390,464,148,452,550,640,14,208,478,990,956,1000,72,16,540,408,638,770,314,260,978,362,122,234,610,202,182,664,358,282,592,634,164,486,432,648,8,704,958,300,54,534,604,982,882,650,954,38,804,838,696,922,196,666,908,820,692,170,806,730,482,650,594,562,38,172,334,316,246,402,456,838,144,576,394,834,8,632,790,740,62,396,238,258,20,442,878,72,656,258,846,312,794,200,636,428,732,424,400,212,434,152,680,584,44,770,674,132,350,580,706,242,846,296,486,392,702,240,306,598,232,192,174,66,936,946,258,940,182,352,122,792,234,68,236,560,916,352,806,978,602,556,640,948,792,334,176,770,46,90,884,360,132,724,102,962,414,730,500,440,770,758,114,104,246,396,20,948,186,212,600,750,182,350,482,618,830,420,278,468,720,368,340,138,562,292,388,322,456,506,344,822,74,682,908,356,770,826,832,252,798,700,102,684,98,124,674,276,268,408,72,164,608,672,368,854,664,870,124,246,162,54,988,630,408,290,592,650,962,552,860,18,720,904,6,712,66,986,844,328,26,480,198,434,502,56,332,874,102,68,302,224,294,594,462,622,520,628,612,254,322,430,646,14,944,874,610,798,772,704,122,242,16,32,280,896,252,354,992,262,684,226,260,624,318,444,510,336,494,8,824,862,402,396,830,572,964,48,174,602,534,564,542,238,10,802,30,684,196,188,376,556,330,656,130,878,786,302,384,430,558,380,608,682,368,76,236,536,858,530,714,314,710,316,590,470,458,718,954,684,708,428,448,164,670,376,450,674,506,690,98,112,374,392,182,420,744,900,348,46,30,958,358,804,322,356,230,778,128,948,368,874,254,60,146,462,992,666,206,914,356,852,366,212,716,312,756,50,602,440,672,962,176,644,546,52,882,866,802,82,398,122,316,748,280,334,536,864,58,292,866,498,976,104,148,192,772,534,366,590,828,940,28,318,686,976,436,960,574,816,480,192,850,178,68,992,336,814,752,842,714,6,660,240,40,280,946,722,452,226,200,48,148,504,50,972,644,54,868,748,480,720,200,368,796,390,432,524,956,674,416,282,302,776,214,216,598,936,28,902,358,378,852,656,160};
    Solution s;
    cout << s.threeConsecutiveOdds(v) << endl;
    return 0;
}